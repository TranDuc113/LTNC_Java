package com.LTNC.LTNC_Java.model;

import java.util.ArrayList;
import java.util.List;

public class CT_DonHangExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public CT_DonHangExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIddonIsNull() {
            addCriterion("idDon is null");
            return (Criteria) this;
        }

        public Criteria andIddonIsNotNull() {
            addCriterion("idDon is not null");
            return (Criteria) this;
        }

        public Criteria andIddonEqualTo(Integer value) {
            addCriterion("idDon =", value, "iddon");
            return (Criteria) this;
        }

        public Criteria andIddonNotEqualTo(Integer value) {
            addCriterion("idDon <>", value, "iddon");
            return (Criteria) this;
        }

        public Criteria andIddonGreaterThan(Integer value) {
            addCriterion("idDon >", value, "iddon");
            return (Criteria) this;
        }

        public Criteria andIddonGreaterThanOrEqualTo(Integer value) {
            addCriterion("idDon >=", value, "iddon");
            return (Criteria) this;
        }

        public Criteria andIddonLessThan(Integer value) {
            addCriterion("idDon <", value, "iddon");
            return (Criteria) this;
        }

        public Criteria andIddonLessThanOrEqualTo(Integer value) {
            addCriterion("idDon <=", value, "iddon");
            return (Criteria) this;
        }

        public Criteria andIddonIn(List<Integer> values) {
            addCriterion("idDon in", values, "iddon");
            return (Criteria) this;
        }

        public Criteria andIddonNotIn(List<Integer> values) {
            addCriterion("idDon not in", values, "iddon");
            return (Criteria) this;
        }

        public Criteria andIddonBetween(Integer value1, Integer value2) {
            addCriterion("idDon between", value1, value2, "iddon");
            return (Criteria) this;
        }

        public Criteria andIddonNotBetween(Integer value1, Integer value2) {
            addCriterion("idDon not between", value1, value2, "iddon");
            return (Criteria) this;
        }

        public Criteria andIdspIsNull() {
            addCriterion("idSp is null");
            return (Criteria) this;
        }

        public Criteria andIdspIsNotNull() {
            addCriterion("idSp is not null");
            return (Criteria) this;
        }

        public Criteria andIdspEqualTo(Integer value) {
            addCriterion("idSp =", value, "idsp");
            return (Criteria) this;
        }

        public Criteria andIdspNotEqualTo(Integer value) {
            addCriterion("idSp <>", value, "idsp");
            return (Criteria) this;
        }

        public Criteria andIdspGreaterThan(Integer value) {
            addCriterion("idSp >", value, "idsp");
            return (Criteria) this;
        }

        public Criteria andIdspGreaterThanOrEqualTo(Integer value) {
            addCriterion("idSp >=", value, "idsp");
            return (Criteria) this;
        }

        public Criteria andIdspLessThan(Integer value) {
            addCriterion("idSp <", value, "idsp");
            return (Criteria) this;
        }

        public Criteria andIdspLessThanOrEqualTo(Integer value) {
            addCriterion("idSp <=", value, "idsp");
            return (Criteria) this;
        }

        public Criteria andIdspIn(List<Integer> values) {
            addCriterion("idSp in", values, "idsp");
            return (Criteria) this;
        }

        public Criteria andIdspNotIn(List<Integer> values) {
            addCriterion("idSp not in", values, "idsp");
            return (Criteria) this;
        }

        public Criteria andIdspBetween(Integer value1, Integer value2) {
            addCriterion("idSp between", value1, value2, "idsp");
            return (Criteria) this;
        }

        public Criteria andIdspNotBetween(Integer value1, Integer value2) {
            addCriterion("idSp not between", value1, value2, "idsp");
            return (Criteria) this;
        }

        public Criteria andGiabanIsNull() {
            addCriterion("giaBan is null");
            return (Criteria) this;
        }

        public Criteria andGiabanIsNotNull() {
            addCriterion("giaBan is not null");
            return (Criteria) this;
        }

        public Criteria andGiabanEqualTo(Double value) {
            addCriterion("giaBan =", value, "giaban");
            return (Criteria) this;
        }

        public Criteria andGiabanNotEqualTo(Double value) {
            addCriterion("giaBan <>", value, "giaban");
            return (Criteria) this;
        }

        public Criteria andGiabanGreaterThan(Double value) {
            addCriterion("giaBan >", value, "giaban");
            return (Criteria) this;
        }

        public Criteria andGiabanGreaterThanOrEqualTo(Double value) {
            addCriterion("giaBan >=", value, "giaban");
            return (Criteria) this;
        }

        public Criteria andGiabanLessThan(Double value) {
            addCriterion("giaBan <", value, "giaban");
            return (Criteria) this;
        }

        public Criteria andGiabanLessThanOrEqualTo(Double value) {
            addCriterion("giaBan <=", value, "giaban");
            return (Criteria) this;
        }

        public Criteria andGiabanIn(List<Double> values) {
            addCriterion("giaBan in", values, "giaban");
            return (Criteria) this;
        }

        public Criteria andGiabanNotIn(List<Double> values) {
            addCriterion("giaBan not in", values, "giaban");
            return (Criteria) this;
        }

        public Criteria andGiabanBetween(Double value1, Double value2) {
            addCriterion("giaBan between", value1, value2, "giaban");
            return (Criteria) this;
        }

        public Criteria andGiabanNotBetween(Double value1, Double value2) {
            addCriterion("giaBan not between", value1, value2, "giaban");
            return (Criteria) this;
        }

        public Criteria andSoluongIsNull() {
            addCriterion("soLuong is null");
            return (Criteria) this;
        }

        public Criteria andSoluongIsNotNull() {
            addCriterion("soLuong is not null");
            return (Criteria) this;
        }

        public Criteria andSoluongEqualTo(Integer value) {
            addCriterion("soLuong =", value, "soluong");
            return (Criteria) this;
        }

        public Criteria andSoluongNotEqualTo(Integer value) {
            addCriterion("soLuong <>", value, "soluong");
            return (Criteria) this;
        }

        public Criteria andSoluongGreaterThan(Integer value) {
            addCriterion("soLuong >", value, "soluong");
            return (Criteria) this;
        }

        public Criteria andSoluongGreaterThanOrEqualTo(Integer value) {
            addCriterion("soLuong >=", value, "soluong");
            return (Criteria) this;
        }

        public Criteria andSoluongLessThan(Integer value) {
            addCriterion("soLuong <", value, "soluong");
            return (Criteria) this;
        }

        public Criteria andSoluongLessThanOrEqualTo(Integer value) {
            addCriterion("soLuong <=", value, "soluong");
            return (Criteria) this;
        }

        public Criteria andSoluongIn(List<Integer> values) {
            addCriterion("soLuong in", values, "soluong");
            return (Criteria) this;
        }

        public Criteria andSoluongNotIn(List<Integer> values) {
            addCriterion("soLuong not in", values, "soluong");
            return (Criteria) this;
        }

        public Criteria andSoluongBetween(Integer value1, Integer value2) {
            addCriterion("soLuong between", value1, value2, "soluong");
            return (Criteria) this;
        }

        public Criteria andSoluongNotBetween(Integer value1, Integer value2) {
            addCriterion("soLuong not between", value1, value2, "soluong");
            return (Criteria) this;
        }

        public Criteria andThanhtienIsNull() {
            addCriterion("thanhTien is null");
            return (Criteria) this;
        }

        public Criteria andThanhtienIsNotNull() {
            addCriterion("thanhTien is not null");
            return (Criteria) this;
        }

        public Criteria andThanhtienEqualTo(Double value) {
            addCriterion("thanhTien =", value, "thanhtien");
            return (Criteria) this;
        }

        public Criteria andThanhtienNotEqualTo(Double value) {
            addCriterion("thanhTien <>", value, "thanhtien");
            return (Criteria) this;
        }

        public Criteria andThanhtienGreaterThan(Double value) {
            addCriterion("thanhTien >", value, "thanhtien");
            return (Criteria) this;
        }

        public Criteria andThanhtienGreaterThanOrEqualTo(Double value) {
            addCriterion("thanhTien >=", value, "thanhtien");
            return (Criteria) this;
        }

        public Criteria andThanhtienLessThan(Double value) {
            addCriterion("thanhTien <", value, "thanhtien");
            return (Criteria) this;
        }

        public Criteria andThanhtienLessThanOrEqualTo(Double value) {
            addCriterion("thanhTien <=", value, "thanhtien");
            return (Criteria) this;
        }

        public Criteria andThanhtienIn(List<Double> values) {
            addCriterion("thanhTien in", values, "thanhtien");
            return (Criteria) this;
        }

        public Criteria andThanhtienNotIn(List<Double> values) {
            addCriterion("thanhTien not in", values, "thanhtien");
            return (Criteria) this;
        }

        public Criteria andThanhtienBetween(Double value1, Double value2) {
            addCriterion("thanhTien between", value1, value2, "thanhtien");
            return (Criteria) this;
        }

        public Criteria andThanhtienNotBetween(Double value1, Double value2) {
            addCriterion("thanhTien not between", value1, value2, "thanhtien");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CT_DonHang
     *
     * @mbg.generated do_not_delete_during_merge Sat Dec 04 22:35:50 ICT 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CT_DonHang
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}