package com.LTNC.LTNC_Java.model;

import java.util.ArrayList;
import java.util.List;

public class UsersExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public UsersExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIduserIsNull() {
            addCriterion("idUser is null");
            return (Criteria) this;
        }

        public Criteria andIduserIsNotNull() {
            addCriterion("idUser is not null");
            return (Criteria) this;
        }

        public Criteria andIduserEqualTo(Integer value) {
            addCriterion("idUser =", value, "iduser");
            return (Criteria) this;
        }

        public Criteria andIduserNotEqualTo(Integer value) {
            addCriterion("idUser <>", value, "iduser");
            return (Criteria) this;
        }

        public Criteria andIduserGreaterThan(Integer value) {
            addCriterion("idUser >", value, "iduser");
            return (Criteria) this;
        }

        public Criteria andIduserGreaterThanOrEqualTo(Integer value) {
            addCriterion("idUser >=", value, "iduser");
            return (Criteria) this;
        }

        public Criteria andIduserLessThan(Integer value) {
            addCriterion("idUser <", value, "iduser");
            return (Criteria) this;
        }

        public Criteria andIduserLessThanOrEqualTo(Integer value) {
            addCriterion("idUser <=", value, "iduser");
            return (Criteria) this;
        }

        public Criteria andIduserIn(List<Integer> values) {
            addCriterion("idUser in", values, "iduser");
            return (Criteria) this;
        }

        public Criteria andIduserNotIn(List<Integer> values) {
            addCriterion("idUser not in", values, "iduser");
            return (Criteria) this;
        }

        public Criteria andIduserBetween(Integer value1, Integer value2) {
            addCriterion("idUser between", value1, value2, "iduser");
            return (Criteria) this;
        }

        public Criteria andIduserNotBetween(Integer value1, Integer value2) {
            addCriterion("idUser not between", value1, value2, "iduser");
            return (Criteria) this;
        }

        public Criteria andHotenIsNull() {
            addCriterion("hoTen is null");
            return (Criteria) this;
        }

        public Criteria andHotenIsNotNull() {
            addCriterion("hoTen is not null");
            return (Criteria) this;
        }

        public Criteria andHotenEqualTo(String value) {
            addCriterion("hoTen =", value, "hoten");
            return (Criteria) this;
        }

        public Criteria andHotenNotEqualTo(String value) {
            addCriterion("hoTen <>", value, "hoten");
            return (Criteria) this;
        }

        public Criteria andHotenGreaterThan(String value) {
            addCriterion("hoTen >", value, "hoten");
            return (Criteria) this;
        }

        public Criteria andHotenGreaterThanOrEqualTo(String value) {
            addCriterion("hoTen >=", value, "hoten");
            return (Criteria) this;
        }

        public Criteria andHotenLessThan(String value) {
            addCriterion("hoTen <", value, "hoten");
            return (Criteria) this;
        }

        public Criteria andHotenLessThanOrEqualTo(String value) {
            addCriterion("hoTen <=", value, "hoten");
            return (Criteria) this;
        }

        public Criteria andHotenLike(String value) {
            addCriterion("hoTen like", value, "hoten");
            return (Criteria) this;
        }

        public Criteria andHotenNotLike(String value) {
            addCriterion("hoTen not like", value, "hoten");
            return (Criteria) this;
        }

        public Criteria andHotenIn(List<String> values) {
            addCriterion("hoTen in", values, "hoten");
            return (Criteria) this;
        }

        public Criteria andHotenNotIn(List<String> values) {
            addCriterion("hoTen not in", values, "hoten");
            return (Criteria) this;
        }

        public Criteria andHotenBetween(String value1, String value2) {
            addCriterion("hoTen between", value1, value2, "hoten");
            return (Criteria) this;
        }

        public Criteria andHotenNotBetween(String value1, String value2) {
            addCriterion("hoTen not between", value1, value2, "hoten");
            return (Criteria) this;
        }

        public Criteria andTendangnhapIsNull() {
            addCriterion("tenDangNhap is null");
            return (Criteria) this;
        }

        public Criteria andTendangnhapIsNotNull() {
            addCriterion("tenDangNhap is not null");
            return (Criteria) this;
        }

        public Criteria andTendangnhapEqualTo(String value) {
            addCriterion("tenDangNhap =", value, "tendangnhap");
            return (Criteria) this;
        }

        public Criteria andTendangnhapNotEqualTo(String value) {
            addCriterion("tenDangNhap <>", value, "tendangnhap");
            return (Criteria) this;
        }

        public Criteria andTendangnhapGreaterThan(String value) {
            addCriterion("tenDangNhap >", value, "tendangnhap");
            return (Criteria) this;
        }

        public Criteria andTendangnhapGreaterThanOrEqualTo(String value) {
            addCriterion("tenDangNhap >=", value, "tendangnhap");
            return (Criteria) this;
        }

        public Criteria andTendangnhapLessThan(String value) {
            addCriterion("tenDangNhap <", value, "tendangnhap");
            return (Criteria) this;
        }

        public Criteria andTendangnhapLessThanOrEqualTo(String value) {
            addCriterion("tenDangNhap <=", value, "tendangnhap");
            return (Criteria) this;
        }

        public Criteria andTendangnhapLike(String value) {
            addCriterion("tenDangNhap like", value, "tendangnhap");
            return (Criteria) this;
        }

        public Criteria andTendangnhapNotLike(String value) {
            addCriterion("tenDangNhap not like", value, "tendangnhap");
            return (Criteria) this;
        }

        public Criteria andTendangnhapIn(List<String> values) {
            addCriterion("tenDangNhap in", values, "tendangnhap");
            return (Criteria) this;
        }

        public Criteria andTendangnhapNotIn(List<String> values) {
            addCriterion("tenDangNhap not in", values, "tendangnhap");
            return (Criteria) this;
        }

        public Criteria andTendangnhapBetween(String value1, String value2) {
            addCriterion("tenDangNhap between", value1, value2, "tendangnhap");
            return (Criteria) this;
        }

        public Criteria andTendangnhapNotBetween(String value1, String value2) {
            addCriterion("tenDangNhap not between", value1, value2, "tendangnhap");
            return (Criteria) this;
        }

        public Criteria andMatkhauIsNull() {
            addCriterion("matKhau is null");
            return (Criteria) this;
        }

        public Criteria andMatkhauIsNotNull() {
            addCriterion("matKhau is not null");
            return (Criteria) this;
        }

        public Criteria andMatkhauEqualTo(String value) {
            addCriterion("matKhau =", value, "matkhau");
            return (Criteria) this;
        }

        public Criteria andMatkhauNotEqualTo(String value) {
            addCriterion("matKhau <>", value, "matkhau");
            return (Criteria) this;
        }

        public Criteria andMatkhauGreaterThan(String value) {
            addCriterion("matKhau >", value, "matkhau");
            return (Criteria) this;
        }

        public Criteria andMatkhauGreaterThanOrEqualTo(String value) {
            addCriterion("matKhau >=", value, "matkhau");
            return (Criteria) this;
        }

        public Criteria andMatkhauLessThan(String value) {
            addCriterion("matKhau <", value, "matkhau");
            return (Criteria) this;
        }

        public Criteria andMatkhauLessThanOrEqualTo(String value) {
            addCriterion("matKhau <=", value, "matkhau");
            return (Criteria) this;
        }

        public Criteria andMatkhauLike(String value) {
            addCriterion("matKhau like", value, "matkhau");
            return (Criteria) this;
        }

        public Criteria andMatkhauNotLike(String value) {
            addCriterion("matKhau not like", value, "matkhau");
            return (Criteria) this;
        }

        public Criteria andMatkhauIn(List<String> values) {
            addCriterion("matKhau in", values, "matkhau");
            return (Criteria) this;
        }

        public Criteria andMatkhauNotIn(List<String> values) {
            addCriterion("matKhau not in", values, "matkhau");
            return (Criteria) this;
        }

        public Criteria andMatkhauBetween(String value1, String value2) {
            addCriterion("matKhau between", value1, value2, "matkhau");
            return (Criteria) this;
        }

        public Criteria andMatkhauNotBetween(String value1, String value2) {
            addCriterion("matKhau not between", value1, value2, "matkhau");
            return (Criteria) this;
        }

        public Criteria andQuyenIsNull() {
            addCriterion("quyen is null");
            return (Criteria) this;
        }

        public Criteria andQuyenIsNotNull() {
            addCriterion("quyen is not null");
            return (Criteria) this;
        }

        public Criteria andQuyenEqualTo(Integer value) {
            addCriterion("quyen =", value, "quyen");
            return (Criteria) this;
        }

        public Criteria andQuyenNotEqualTo(Integer value) {
            addCriterion("quyen <>", value, "quyen");
            return (Criteria) this;
        }

        public Criteria andQuyenGreaterThan(Integer value) {
            addCriterion("quyen >", value, "quyen");
            return (Criteria) this;
        }

        public Criteria andQuyenGreaterThanOrEqualTo(Integer value) {
            addCriterion("quyen >=", value, "quyen");
            return (Criteria) this;
        }

        public Criteria andQuyenLessThan(Integer value) {
            addCriterion("quyen <", value, "quyen");
            return (Criteria) this;
        }

        public Criteria andQuyenLessThanOrEqualTo(Integer value) {
            addCriterion("quyen <=", value, "quyen");
            return (Criteria) this;
        }

        public Criteria andQuyenIn(List<Integer> values) {
            addCriterion("quyen in", values, "quyen");
            return (Criteria) this;
        }

        public Criteria andQuyenNotIn(List<Integer> values) {
            addCriterion("quyen not in", values, "quyen");
            return (Criteria) this;
        }

        public Criteria andQuyenBetween(Integer value1, Integer value2) {
            addCriterion("quyen between", value1, value2, "quyen");
            return (Criteria) this;
        }

        public Criteria andQuyenNotBetween(Integer value1, Integer value2) {
            addCriterion("quyen not between", value1, value2, "quyen");
            return (Criteria) this;
        }

        public Criteria andTrangthaiIsNull() {
            addCriterion("trangThai is null");
            return (Criteria) this;
        }

        public Criteria andTrangthaiIsNotNull() {
            addCriterion("trangThai is not null");
            return (Criteria) this;
        }

        public Criteria andTrangthaiEqualTo(Boolean value) {
            addCriterion("trangThai =", value, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiNotEqualTo(Boolean value) {
            addCriterion("trangThai <>", value, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiGreaterThan(Boolean value) {
            addCriterion("trangThai >", value, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiGreaterThanOrEqualTo(Boolean value) {
            addCriterion("trangThai >=", value, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiLessThan(Boolean value) {
            addCriterion("trangThai <", value, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiLessThanOrEqualTo(Boolean value) {
            addCriterion("trangThai <=", value, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiIn(List<Boolean> values) {
            addCriterion("trangThai in", values, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiNotIn(List<Boolean> values) {
            addCriterion("trangThai not in", values, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiBetween(Boolean value1, Boolean value2) {
            addCriterion("trangThai between", value1, value2, "trangthai");
            return (Criteria) this;
        }

        public Criteria andTrangthaiNotBetween(Boolean value1, Boolean value2) {
            addCriterion("trangThai not between", value1, value2, "trangthai");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Users
     *
     * @mbg.generated do_not_delete_during_merge Sat Dec 04 22:35:50 ICT 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Users
     *
     * @mbg.generated Sat Dec 04 22:35:50 ICT 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}